{
  "ApiSettings": {
    "SecretKey": "uE/!Wx9<t2{V73@reb^4]6c)N#TqgA;s&XHP_nf}d%+S>*"
  },
  "claveSecreta": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "SqlConnection": "Server=localhost;Database=BimbaData;User=AppUserLogin;Password=e.d_fwm2()~37hz?+LBT4V;TrustServerCertificate=True"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "MatchMaker.API": "Debug"
    }
  }
}
/*
//Create Container
docker run -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=wnD/LbJq?X39t,}-628%)' -e "MSSQL_PID=Developer"
  -p 1433:1433 
  --name SQL_Server_DI
  -v SQL_Server_Volume:/var/opt/mssql
  -d mcr.microsoft.com/mssql/server:2022-latest


//Create User
-- Step 1: Create a SQL Login
CREATE LOGIN AppUserLogin
WITH PASSWORD = 'e.d_fwm2()~37hz?+LBT4V'; -- Replace with a strong password

CREATE USER AppUser
FOR LOGIN AppUserLogin;

-- Step 2: Create a Database User for MovieAPI
USE Basic;

CREATE USER AppUser
FOR LOGIN AppUserLogin;

-- Step 3: Grant CRUD permissions to the user
-- Grant permissions on the schema or specific tables
GRANT SELECT, INSERT, UPDATE, DELETE ON SCHEMA::dbo TO AppUser;

-- Alternatively, grant db_datawriter and db_datareader roles
-- db_datareader: Can read all data in the database
-- db_datawriter: Can write to all data in the database
EXEC sp_addrolemember 'db_datareader', 'AppUser';
EXEC sp_addrolemember 'db_datawriter', 'AppUser';

-- Step 4: Grant ALTER and CREATE permissions for handling migrations
GRANT ALTER ON SCHEMA::dbo TO AppUser; -- For altering existing objects
GRANT REFERENCES ON SCHEMA::dbo TO AppUser;
GRANT CREATE TABLE TO AppUser;        -- For creating new tables
GRANT CREATE PROCEDURE TO AppUser;    -- For creating stored procedures
GRANT CREATE VIEW TO AppUser;         -- For creating views

-- Step 5: Optionally grant execution permission if needed
GRANT EXECUTE ON SCHEMA::dbo TO AppUser;

*/